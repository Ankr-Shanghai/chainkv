// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: common.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReqType int32

const (
	ReqType_REQ_TYPE_GET          ReqType = 0
	ReqType_REQ_TYPE_PUT          ReqType = 1
	ReqType_REQ_TYPE_HAS          ReqType = 2
	ReqType_REQ_TYPE_DEL          ReqType = 3
	ReqType_REQ_TYPE_BATCH_NEW    ReqType = 4
	ReqType_REQ_TYPE_BATCH_PUT    ReqType = 5
	ReqType_REQ_TYPE_BATCH_DEL    ReqType = 6
	ReqType_REQ_TYPE_BATCH_WRITE  ReqType = 7
	ReqType_REQ_TYPE_BATCH_RESET  ReqType = 8
	ReqType_REQ_TYPE_BATCH_CLOSE  ReqType = 9
	ReqType_REQ_TYPE_ITER_NEW     ReqType = 10
	ReqType_REQ_TYPE_ITER_NEXT    ReqType = 11
	ReqType_REQ_TYPE_ITER_KEY     ReqType = 12
	ReqType_REQ_TYPE_ITER_VAL     ReqType = 13
	ReqType_REQ_TYPE_ITER_ERROR   ReqType = 14
	ReqType_REQ_TYPE_ITER_CLOSE   ReqType = 15
	ReqType_REQ_TYPE_SNAP_NEW     ReqType = 16
	ReqType_REQ_TYPE_SNAP_HAS     ReqType = 17
	ReqType_REQ_TYPE_SNAP_GET     ReqType = 18
	ReqType_REQ_TYPE_SNAP_RELEASE ReqType = 19
)

// Enum value maps for ReqType.
var (
	ReqType_name = map[int32]string{
		0:  "REQ_TYPE_GET",
		1:  "REQ_TYPE_PUT",
		2:  "REQ_TYPE_HAS",
		3:  "REQ_TYPE_DEL",
		4:  "REQ_TYPE_BATCH_NEW",
		5:  "REQ_TYPE_BATCH_PUT",
		6:  "REQ_TYPE_BATCH_DEL",
		7:  "REQ_TYPE_BATCH_WRITE",
		8:  "REQ_TYPE_BATCH_RESET",
		9:  "REQ_TYPE_BATCH_CLOSE",
		10: "REQ_TYPE_ITER_NEW",
		11: "REQ_TYPE_ITER_NEXT",
		12: "REQ_TYPE_ITER_KEY",
		13: "REQ_TYPE_ITER_VAL",
		14: "REQ_TYPE_ITER_ERROR",
		15: "REQ_TYPE_ITER_CLOSE",
		16: "REQ_TYPE_SNAP_NEW",
		17: "REQ_TYPE_SNAP_HAS",
		18: "REQ_TYPE_SNAP_GET",
		19: "REQ_TYPE_SNAP_RELEASE",
	}
	ReqType_value = map[string]int32{
		"REQ_TYPE_GET":          0,
		"REQ_TYPE_PUT":          1,
		"REQ_TYPE_HAS":          2,
		"REQ_TYPE_DEL":          3,
		"REQ_TYPE_BATCH_NEW":    4,
		"REQ_TYPE_BATCH_PUT":    5,
		"REQ_TYPE_BATCH_DEL":    6,
		"REQ_TYPE_BATCH_WRITE":  7,
		"REQ_TYPE_BATCH_RESET":  8,
		"REQ_TYPE_BATCH_CLOSE":  9,
		"REQ_TYPE_ITER_NEW":     10,
		"REQ_TYPE_ITER_NEXT":    11,
		"REQ_TYPE_ITER_KEY":     12,
		"REQ_TYPE_ITER_VAL":     13,
		"REQ_TYPE_ITER_ERROR":   14,
		"REQ_TYPE_ITER_CLOSE":   15,
		"REQ_TYPE_SNAP_NEW":     16,
		"REQ_TYPE_SNAP_HAS":     17,
		"REQ_TYPE_SNAP_GET":     18,
		"REQ_TYPE_SNAP_RELEASE": 19,
	}
)

func (x ReqType) Enum() *ReqType {
	p := new(ReqType)
	*p = x
	return p
}

func (x ReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (ReqType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x ReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReqType.Descriptor instead.
func (ReqType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type NotSupport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *NotSupport) Reset() {
	*x = NotSupport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotSupport) ProtoMessage() {}

func (x *NotSupport) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotSupport.ProtoReflect.Descriptor instead.
func (*NotSupport) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *NotSupport) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ReqType `protobuf:"varint,1,opt,name=type,proto3,enum=client.pb.ReqType" json:"type,omitempty"`
	Key  []byte  `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"` // new iter key == prefix
	Val  []byte  `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"` // new iter val == start
	Id   uint32  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *Request) GetType() ReqType {
	if x != nil {
		return x.Type
	}
	return ReqType_REQ_TYPE_GET
}

func (x *Request) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Request) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

func (x *Request) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Val   []byte `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
	Id    uint32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Exist bool   `protobuf:"varint,4,opt,name=exist,proto3" json:"exist,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Response) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

func (x *Response) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Response) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x62, 0x22, 0x20, 0x0a, 0x0a, 0x4e, 0x6f, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x65, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76,
	0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x56, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x76, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2a, 0xd6, 0x03, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x51, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x55, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45,
	0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x41, 0x53, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x52, 0x45, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x10, 0x03, 0x12, 0x16,
	0x0a, 0x12, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48,
	0x5f, 0x4e, 0x45, 0x57, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x50, 0x55, 0x54, 0x10, 0x05, 0x12, 0x16,
	0x0a, 0x12, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48,
	0x5f, 0x44, 0x45, 0x4c, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x07,
	0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45,
	0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x4c, 0x4f,
	0x53, 0x45, 0x10, 0x09, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x54, 0x45, 0x52, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x52,
	0x45, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x52, 0x5f, 0x4e, 0x45, 0x58,
	0x54, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x54, 0x45, 0x52, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x0c, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45,
	0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x52, 0x5f, 0x56, 0x41, 0x4c, 0x10,
	0x0d, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x54,
	0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0e, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45,
	0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4c, 0x4f, 0x53,
	0x45, 0x10, 0x0f, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x4e, 0x41, 0x50, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x10, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45,
	0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x5f, 0x48, 0x41, 0x53, 0x10,
	0x11, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4e,
	0x41, 0x50, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x12, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x51, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53,
	0x45, 0x10, 0x13, 0x42, 0x0b, 0x5a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_common_proto_goTypes = []interface{}{
	(ReqType)(0),       // 0: client.pb.ReqType
	(*NotSupport)(nil), // 1: client.pb.NotSupport
	(*Request)(nil),    // 2: client.pb.Request
	(*Response)(nil),   // 3: client.pb.Response
}
var file_common_proto_depIdxs = []int32{
	0, // 0: client.pb.Request.type:type_name -> client.pb.ReqType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotSupport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
